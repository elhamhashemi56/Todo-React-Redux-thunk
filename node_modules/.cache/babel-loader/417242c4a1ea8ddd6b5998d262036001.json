{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/dcil175/Desktop/React/start-elhamhashemi56/meinprojekt/src/components/todoApp/Aufgabeinput.js\";\nimport './Formuler.css';\nimport { connect } from 'react-redux';\n\nconst Aufgabeinput = props => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    action: \"\",\n    children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: \"Neue Aufgabe .\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: props.handelchange,\n          value: props.inputTexte\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: props.aufgabeHinzufügen,\n          children: \"Aufgabe Hinzuf\\xFCgen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Aufgabeinput;\n\nconst mapStateToProps = state => ({\n  inputTexte: state.inputTexte\n});\n\nconst mapDispatchToProps = dispatch => ({\n  aufgabeHinzufügen: data => dispatch({\n    type: 'AUFGABE_HINZUFÜGEN',\n    peyload: data\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Aufgabeinput);\n\nvar _c;\n\n$RefreshReg$(_c, \"Aufgabeinput\");","map":{"version":3,"sources":["/home/dcil175/Desktop/React/start-elhamhashemi56/meinprojekt/src/components/todoApp/Aufgabeinput.js"],"names":["connect","Aufgabeinput","props","handelchange","inputTexte","aufgabeHinzufügen","mapStateToProps","state","mapDispatchToProps","dispatch","data","type","peyload"],"mappings":";;AAAA,OAAO,gBAAP;AACA,SAAQA,OAAR,QAAsB,aAAtB;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAU;AAC3B,sBACA;AAAM,IAAA,MAAM,EAAC,EAAb;AAAA,2BACQ;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,+BAAK;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAEA,KAAK,CAACC,YAAnC;AAAiD,UAAA,KAAK,EAAED,KAAK,CAACE;AAA9D;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,+BAAK;AAAQ,UAAA,OAAO,EAAEF,KAAK,CAACG,iBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,UADA;AAYH,CAbD;;KAAMJ,Y;;AAeN,MAAMK,eAAe,GAAIC,KAAD,KAAW;AAC/BH,EAAAA,UAAU,EAACG,KAAK,CAACH;AADc,CAAX,CAAxB;;AAIA,MAAMI,kBAAkB,GAAIC,QAAD,KAAc;AACrCJ,EAAAA,iBAAiB,EAAGK,IAAD,IAAUD,QAAQ,CAAC;AAACE,IAAAA,IAAI,EAAC,oBAAN;AAA4BC,IAAAA,OAAO,EAACF;AAApC,GAAD;AADA,CAAd,CAA3B;;AAMA,eAAeV,OAAO,CAACM,eAAD,EAAiBE,kBAAjB,CAAP,CAA4CP,YAA5C,CAAf","sourcesContent":["import './Formuler.css'\nimport {connect} from 'react-redux'\n\nconst Aufgabeinput = (props) =>{\n    return(\n    <form action=\"\">\n            <fieldset>\n                <legend>Neue Aufgabe .</legend>\n                <div><input type=\"text\" onChange={props.handelchange} value={props.inputTexte}></input></div>\n                <br/>\n                <div><button onClick={props.aufgabeHinzufügen}>Aufgabe Hinzufügen</button></div>\n                \n            </fieldset>\n\n        </form>\n        )\n}\n\nconst mapStateToProps = (state) =>({\n    inputTexte:state.inputTexte\n})\n\nconst mapDispatchToProps = (dispatch) =>({\n    aufgabeHinzufügen: (data) => dispatch({type:'AUFGABE_HINZUFÜGEN', peyload:data})\n})\n\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Aufgabeinput)\n\n"]},"metadata":{},"sourceType":"module"}