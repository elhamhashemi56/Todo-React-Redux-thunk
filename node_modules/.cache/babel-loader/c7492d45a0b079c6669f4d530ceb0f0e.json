{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/dcil175/Desktop/React/start-elhamhashemi56/meinprojekt/src/components/todoApp/TodoApp.js\";\nimport React from 'react';\nimport Header from './Header';\nimport AufgabenListe from './AufgabenListe';\nimport Aufgabeinput from './Aufgabeinput';\n\nclass TodoApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      aufgaben: ['aufgabe 1', 'blumen gießen', 'kochen', 'sport'],\n      inputTexte: \"\"\n    };\n    this.aufgabeHinzufügen = this.aufgabeHinzufügen.bind(this);\n    this.handelchange = this.handelchange.bind(this);\n    this.löschHandler = this.löschHandler(this);\n  }\n\n  handelchange(event) {\n    this.setState({\n      inputTexte: event.target.value\n    });\n  }\n\n  aufgabeHinzufügen(event) {\n    event.preventDefault();\n    this.setState(state => ({\n      aufgaben: [...state.aufgaben, this.state.inputTexte],\n      inputTexte: \"\"\n    }));\n  }\n\n  löschHandler(event) {\n    let löschId = Number.parseInt(event.target.id.slice(\"todoitem\".length));\n    console.log('item gelöscht', löschId);\n\n    if (window.prompt(\"Willst du wirklich löschen?\")) {\n      let Acctuelaufgabe = [...this.state.aufgaben];\n      Acctuelaufgabe.splice(löschId, 1);\n      this.setState({\n        aufgaben: Acctuelaufgabe\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    console.log(\"Todo-App wurde neu gerendert.\");\n    localStorage.setItem(\"todoaufgaben\", JSON.stringify(this.state.aufgaben));\n  }\n\n  componentDidMount() {\n    console.log(\"ToDo-App geboren und einsatzbereit.\");\n    let aufgaben = localStorage.getItem(\"todoaufgaben\");\n\n    if (aufgaben) {\n      let todos = JSON.parse(aufgaben);\n      this.setState({\n        aufgaben: todos\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Todo\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Aufgabeinput, {\n        aufgabeHinzufügen: this.aufgabeHinzufügen,\n        handelchange: this.handelchange,\n        inputTexte: this.state.inputTexte\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(AufgabenListe, {\n        aufgaben: this.state.aufgaben,\n        löschHandler: this.löschHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default TodoApp;","map":{"version":3,"sources":["/home/dcil175/Desktop/React/start-elhamhashemi56/meinprojekt/src/components/todoApp/TodoApp.js"],"names":["React","Header","AufgabenListe","Aufgabeinput","TodoApp","Component","constructor","props","state","aufgaben","inputTexte","aufgabeHinzufügen","bind","handelchange","löschHandler","event","setState","target","value","preventDefault","löschId","Number","parseInt","id","slice","length","console","log","window","prompt","Acctuelaufgabe","splice","componentDidUpdate","localStorage","setItem","JSON","stringify","componentDidMount","getItem","todos","parse","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Header from './Header'\nimport AufgabenListe from './AufgabenListe'\nimport Aufgabeinput from './Aufgabeinput'\n\nclass TodoApp  extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={\n          aufgaben:['aufgabe 1', 'blumen gießen', 'kochen', 'sport'],\n          inputTexte:\"\"\n        }\n\n        this.aufgabeHinzufügen=this.aufgabeHinzufügen.bind(this)\n        this.handelchange=this.handelchange.bind(this)\n        this.löschHandler=this.löschHandler(this)\n    }\n\n\n    handelchange(event){\n      this.setState({inputTexte:event.target.value})\n    }\n\n  aufgabeHinzufügen(event) {\n    event.preventDefault();\n    this.setState(state => ({\n      aufgaben: [...state.aufgaben, this.state.inputTexte],\n      inputTexte: \"\"\n    })\n\n    )\n  } \n\n  löschHandler(event){\n    let löschId = Number.parseInt(event.target.id.slice(\"todoitem\".length));\n    console.log('item gelöscht',löschId);\n\n    if(window.prompt(\"Willst du wirklich löschen?\")){\n    let Acctuelaufgabe=[...this.state.aufgaben]\n    Acctuelaufgabe.splice(löschId,1)\n    this.setState({aufgaben:Acctuelaufgabe})\n  }\n}\n  componentDidUpdate(){\n    console.log(\"Todo-App wurde neu gerendert.\");\n    localStorage.setItem(\"todoaufgaben\",JSON.stringify(this.state.aufgaben))\n  }\n\n  componentDidMount(){\n    console.log(\"ToDo-App geboren und einsatzbereit.\");\n    let aufgaben=localStorage.getItem(\"todoaufgaben\")\n    if(aufgaben){\n      let todos=JSON.parse(aufgaben)\n      this.setState({aufgaben:todos})\n    }\n  }\n\nrender(){\n    return(\n    <div className=\"Todo\">\n      <Header />\n      <Aufgabeinput aufgabeHinzufügen={this.aufgabeHinzufügen} handelchange={this.handelchange} inputTexte={this.state.inputTexte}/>\n      <AufgabenListe aufgaben={this.state.aufgaben} löschHandler={this.löschHandler} />\n\n    </div>\n    )\n  }\n}\nexport default TodoApp;"]},"metadata":{},"sourceType":"module"}