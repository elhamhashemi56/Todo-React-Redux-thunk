{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/dcil175/Desktop/React/Todo-React-Redux -thunk/meinprojekt/src/components/todoredux/ListTodo.js\";\nimport { connect } from 'react-redux';\nimport ListItems from './ListItems';\n\nconst ListTodo = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.aufgabe.map((element, index) => {\n        return /*#__PURE__*/_jsxDEV(ListItems, {\n          row: element,\n          löschId: index\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ListTodo;\n\nconst mapStateToProps = state => ({\n  aufgabe: state.aufgabe\n});\n\nexport default connect(mapStateToProps)(ListTodo);\n\nvar _c;\n\n$RefreshReg$(_c, \"ListTodo\");","map":{"version":3,"sources":["/home/dcil175/Desktop/React/Todo-React-Redux -thunk/meinprojekt/src/components/todoredux/ListTodo.js"],"names":["connect","ListItems","ListTodo","props","aufgabe","map","element","index","mapStateToProps","state"],"mappings":";;AAAA,SAAQA,OAAR,QAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAU;AACvB,sBACI;AAAA,2BACI;AAAA,gBACCA,KAAK,CAACC,OAAN,CAAcC,GAAd,CAAkB,CAACC,OAAD,EAASC,KAAT,KAAiB;AAChC,4BACI,QAAC,SAAD;AAAuB,UAAA,GAAG,EAAED,OAA5B;AAAqC,UAAA,OAAO,EAAEC;AAA9C,WAAgBA,KAAhB;AAAA;AAAA;AAAA;AAAA,gBADJ;AAGD,OAJF;AADD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAdD;;KAAML,Q;;AAgBN,MAAMM,eAAe,GAAIC,KAAD,KAAW;AAC/BL,EAAAA,OAAO,EAACK,KAAK,CAACL;AADiB,CAAX,CAAxB;;AAIA,eAAeJ,OAAO,CAACQ,eAAD,CAAP,CAAyBN,QAAzB,CAAf","sourcesContent":["import {connect} from 'react-redux'\nimport ListItems from './ListItems'\n\nconst ListTodo = (props) =>{\n    return(\n        <div>\n            <ul>\n            {props.aufgabe.map((element,index)=>{\n                return(\n                    <ListItems key={index} row={element} löschId={index}/>\n                )\n              }\n\n            )}\n            </ul>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) =>({\n    aufgabe:state.aufgabe\n})\n\nexport default connect(mapStateToProps)(ListTodo)"]},"metadata":{},"sourceType":"module"}