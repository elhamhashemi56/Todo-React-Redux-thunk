{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/dcil175/Desktop/React/start-elhamhashemi56/meinprojekt/src/components/todoredux/TodoRedux.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport ListTodo from './ListTodo';\n\nclass TodoRedux extends React.Component {\n  constructor(props) {\n    // console.log('hallllllo',props.aufgabe);\n    super(props);\n    this.state = {\n      inputname: ''\n    };\n    this.Handelchange = this.Handelchange.bind(this);\n  }\n\n  Handelchange(event) {\n    this.setState({\n      inputname: event.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: this.Handelchange,\n        value: this.state.inputname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          this.props.sendToArray(this.state.inputname);\n          this.setState({\n            inputname: ''\n          });\n        },\n        children: \"send to todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListTodo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  }\n\n} // const mapStateToProps =(state)=>({\n//     aufgabe:state.aufgabe\n// })\n\n\nconst mapDispatchToProps = dispatch => ({\n  sendToArray: data => dispatch({\n    type: 'SEND_TOARRAY',\n    peyload: data\n  })\n});\n\nexport default connect(null, mapDispatchToProps)(TodoRedux);","map":{"version":3,"sources":["/home/dcil175/Desktop/React/start-elhamhashemi56/meinprojekt/src/components/todoredux/TodoRedux.js"],"names":["React","connect","ListTodo","TodoRedux","Component","constructor","props","state","inputname","Handelchange","bind","event","setState","target","value","render","sendToArray","mapDispatchToProps","dispatch","data","type","peyload"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AACA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAuC;AAEnCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd;AACA,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,SAAS,EAAC;AADH,KAAX;AAGA,SAAKC,YAAL,GAAkB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAAlB;AACH;;AAELD,EAAAA,YAAY,CAACE,KAAD,EAAO;AACf,SAAKC,QAAL,CAAc;AAACJ,MAAAA,SAAS,EAACG,KAAK,CAACE,MAAN,CAAaC;AAAxB,KAAd;AACH;;AACGC,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,KAAKN,YAAlC;AAAgD,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC;AAAlE;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAE,MAAI;AACjB,eAAKF,KAAL,CAAWU,WAAX,CAAuB,KAAKT,KAAL,CAAWC,SAAlC;AACA,eAAKI,QAAL,CAAc;AAACJ,YAAAA,SAAS,EAAC;AAAX,WAAd;AACH,SAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAMI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AAzBkC,C,CA4BvC;AACA;AAEA;;;AAEA,MAAMS,kBAAkB,GAAIC,QAAD,KAAe;AACtCF,EAAAA,WAAW,EAAGG,IAAD,IAAUD,QAAQ,CAAC;AAACE,IAAAA,IAAI,EAAC,cAAN;AAAqBC,IAAAA,OAAO,EAACF;AAA7B,GAAD;AADO,CAAf,CAA3B;;AAIA,eAAelB,OAAO,CAAC,IAAD,EAAMgB,kBAAN,CAAP,CAAiCd,SAAjC,CAAf","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux'\nimport ListTodo from './ListTodo'\nclass TodoRedux extends React.Component{\n   \n    constructor(props){\n        // console.log('hallllllo',props.aufgabe);\n        super(props)\n        this.state={\n            inputname:''\n        }\n        this.Handelchange=this.Handelchange.bind(this)\n    }\n\nHandelchange(event){\n    this.setState({inputname:event.target.value})\n}\n    render(){\n        return(\n            <div>\n                <input type=\"text\" onChange={this.Handelchange} value={this.state.inputname}/>\n                <button onClick={()=>{\n                    this.props.sendToArray(this.state.inputname)\n                    this.setState({inputname:''})\n                }}>send to todo</button>\n                <ListTodo />\n            </div>\n        )\n    }\n}\n\n// const mapStateToProps =(state)=>({\n//     aufgabe:state.aufgabe\n    \n// })\n\nconst mapDispatchToProps = (dispatch) => ({\n    sendToArray: (data) => dispatch({type:'SEND_TOARRAY',peyload:data})\n})\n\nexport default connect(null,mapDispatchToProps)(TodoRedux)"]},"metadata":{},"sourceType":"module"}